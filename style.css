@import url('https://fonts.googleapis.com/css?family=Commissioner:700|Commissioner:400');

*, body {
  font-family: 'Commissioner';
  font-weight: 400;
}

h1, h2, h3, h4, h5 {
  font-family: 'Commissioner';
  font-weight: 700;
}

html {font-size: 100%;} /* 16px */

h1 {font-size: 4.210rem; /* 67.36px */}

h2 {font-size: 3.158rem; /* 50.56px */}

h3 {font-size: 2.369rem; /* 37.92px */}

h4 {font-size: 1.777rem; /* 28.48px */}

h5 {font-size: 1.333rem; /* 21.28px */}

small {font-size: 0.750rem; /* 12px */}


:root {
    color-scheme: light;
    --text: #11121c;
    --background: #e9e9f1;
    --background-50: #efeff5;
    --primary: #3b405e;
    --secondary: #bf97a5;
    --accent: #956a5b;
}

[data-theme="dark"] {
    color-scheme: dark;
    --text: #e3e4ee;
    --background: #0f0f17;
    --background-50: #0a0a0f;
    --primary: #a2a7c5;
    --secondary: #69414f;
    --accent: #a3796a;
    
}

* {
    box-sizing: border-box;
}

body {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    font-family: 'Open Sans', sans-serif;
    background-color: var(--background);
        transition: background-color 1.5s;
    color: var(--text);
    font-size: 16px;
}

.container {
    display: flex;
    justify-content: center;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    width: 95vw;
}

.hide {
    display: none !important;
}

h1 {
    color: var(--primary);
    margin-bottom: 4px;
}

small {
    width: 100%;
    text-align: center;
    display: block;
    margin-bottom: 20px;
}

h2 {
    width: 100%;
    text-align: center;
    color: var(--text);
    margin: 0;
}

img {
    border: 2px solid var(--primary);
    box-shadow:
        0 0px 6px var(--primary),
        0 0px 6px var(--primary);
    max-width: 100%;
    height: auto;
}

a {
    color: var(--primary);
    text-decoration: none;
}

a:hover {
    color: var(--text);
}

.github-img {
    width: 45px;
    margin-right: 8px;
}

ul {
    list-style: none;
    padding: 0;
}

.user-info {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    background-color: var(--background);
        transition: background-color 1.5s;
    color: var(--text);
    font-size: 18px;
    padding: 2em;
}

.user-info figure {
    width: 90%;
    max-width: 300px;
}

.user-info img {
    border-radius: 100%;
}

.user-info div {
    display: flex;
    text-align: center;
    flex-wrap: wrap;
    align-items: center;
    width: 100%;
    padding-left: 5%;
}

.user-info div p {
    width: 100%;
    margin: 0;
    padding: 0;
    border-bottom: 1px solid var(--text);
    padding-bottom: 18px;
}

.filter-repos,
input {
    background-color: var(--background);
        transition: background-color 1.5s;
    width: 50%;
    border-radius: 20px;
    min-width: 300px;
    margin-top: 1em;
    padding: 1em;
    margin-bottom: 1em;
    border: 2px solid var(--primary);
    color: var(--text);
    text-align: center;
}

.repos {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    background-color: var(--background);
    transition: background-color 1.5s;
    margin-top: 0;
    border-bottom-left-radius: 20px;
    border-bottom-right-radius: 20px;
    margin-bottom: 20px;
}

.repo-list {
    max-width: 1200px;
    margin: 30px auto;
    padding: 0 20px;
    width: 100%; 
    display: grid;
    /* Define Auto Row size */
    grid-auto-rows: max-content;
    /*Define our columns */
    grid-template-columns: repeat(auto-fill, minmax(300px, 2fr)); 
    grid-gap: 1rem;
}

.repo-list .card {
    background-color: var(--background);
        transition: background-color 1.5s;
    display: flex;
    flex-direction: column; 
    justify-content: space-around;
    align-items: center;
    min-height: 250px;
    min-width: 300px;
    border-radius: 8px;
    gap: 1rem;
    padding: 20px 4px;
    text-align: center;
    position: relative;
    overflow: hidden;
}

.repo-list .card::before {
    content: '';
    position: absolute;
    background-color: var(--primary);
        transition: background-color 1.5s;
    transform: rotate(0deg);
    width: 100%;
    height: 100%;
    
}

.repo-list .card:hover::before {
    width: 200%;
    height: 40%;
    animation: rotate 2s linear infinite;
}

.repo-list .card::after {
    content: '';
    position: absolute;
    border-radius: 8px;
    background-color: var(--background-50);
        transition: background-color 1.5s;
    inset: 2px;
}

@keyframes rotate {
    from{
        transform: rotate(0deg);
    }
    to{
        transform: rotate(360deg);
    }
}


.repo-list .card .cardTitle {
    font-weight: 600;
    font-size: 1.6rem;
    margin: 4px 0;
    width: 100%;
    text-align: center;
    color: var(--primary);
    z-index: 2;
    border-bottom: solid var(--primary) 2px;
    padding-bottom: 1rem;
}
.repo-list .card .cardDescription{
    font-size: 1.3rem;
    z-index: 2;
}

.repo-list .card .cardGroup{
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    z-index: 2;
}

.repo-list .card .cardGroup a{
    height: 100%;
    align-items: center;
    color: var(--primary);
    z-index: 2;
}

.repo-list .card .cardBtns{
    display: flex;
    justify-content: space-around;
    width: 80%;
    z-index: 2;
}

.link-btn {
    padding: 10px 30px;
    background-color: var(--background);
    transition: background-color 1.5s;
    border-radius: 4px;
    border: 2px solid var(--primary);
    color: var(--primary);
    z-index: 2;
    position: relative;
}

.link-btn:hover {
    color: var(--background);
    border: 2px solid var(--primary);
    background: var(--primary);
    z-index: 2;
}

.link-btn i {
    color: var(--accent);
}

@media (min-width: 700px) {
    .user-info div {
        width: 45%;
        text-align: left;
    }
}

@media (max-width: 700px) {
    .user-info div p {
        margin: 10px;
    }
}

#lightDarkBtn {
    position: fixed; /* Fixed/sticky position */
    top: 20px; /* Place the button at the bottom of the page */
    right: 30px; /* Place the button 30px from the right */
    width: 50px;
    height: 50px;
    z-index: 99; /* Make sure it does not overlap */
    border: 2px solid var(--primary); /* Remove borders */
    outline: none; /* Remove outline */
    background-color: var(--background);
    transition: background-color 1.5s; /* Set a background color */
    color: var(--text); /* Text color */
    cursor: pointer; /* Add a mouse pointer on hover */
    border-radius: 4px; /* Rounded corners */
}

#lightDarkBtn:hover {
    background-color: var(--primary); /* Add a dark-grey background on hover */
    color: var(--secondary); /* Text color */
}



#backToTopBtn {
    display: none; /* Hidden by default */
    position: fixed; /* Fixed/sticky position */
    bottom: 20px; /* Place the button at the bottom of the page */
    right: 30px; /* Place the button 30px from the right */
    width: 50px;
    height: 50px;
    z-index: 99; /* Make sure it does not overlap */
    border: 2px solid var(--primary); /* Remove borders */
    outline: none; /* Remove outline */
    background-color: var(--background);
    transition: background-color 1.5s; /* Set a background color */
    color: var(--text); /* Text color */
    cursor: pointer; /* Add a mouse pointer on hover */
    
    border-radius: 4px; /* Rounded corners */
}

#backToTopBtn:hover {
    background-color: var(--primary); /* Add a dark-grey background on hover */
    color: var(--secondary); /* Text color */
}